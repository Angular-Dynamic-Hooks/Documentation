name: Github pages
run-name: Building and deploying to Github Pages
on: 
  # Runs on pushes targeting the default branch
  push:
    branches:
      - main

  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:

# Sets permissions of the GITHUB_TOKEN to allow deployment to GitHub Pages
permissions:
  contents: read
  pages: write
  id-token: write

# Allow only one concurrent deployment, skipping runs queued between the run in-progress and latest queued.
# However, do NOT cancel in-progress runs as we want to allow these production deployments to complete.
concurrency:
  group: "pages"
  cancel-in-progress: false

# Much of the following is copied from: https://github.com/Angular-Dynamic-Hooks/Documentation/new/main?filename=.github%2Fworkflows%2Fjekyll.yml&pages_workflow_template=pages%2Fjekyll
jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - run: echo "üéâ The job was automatically triggered by a ${{ github.event_name }} event."
      - run: echo "üêß This job is now running on a ${{ runner.os }} server hosted by GitHub!"
      - run: echo "üîé The name of your branch is ${{ github.ref }} and your repository is ${{ github.repository }}."

      - name: Checking out repository code...
        uses: actions/checkout@v4

      - run: echo "üí° The ${{ github.repository }} repository has been cloned to the runner."

      - name: Installing Ruby...
        run: |
          sudo apt-get update &&\
          sudo apt-get install -y ruby-dev gcc g++ make &&\
          sudo gem install bundler

      - name: "Installing ruby gems..."
        run: |
          sudo bundle install

      - name: Installing npm deps...
        run: |
          npm install

      - name: Building JS...
        run: |
          npm run ng-build-prod

      - name: Building Jekyll...
        run: |
          npm run jekyll-build
        env:
          JEKYLL_ENV: production
          
      - name: Uploading artifact for Github pages...
        # Automatically uploads an artifact from the './_site' directory by default
        # https://github.com/actions/upload-pages-artifact
        uses: actions/upload-pages-artifact@v3

      - run: echo "üçè This job's status is ${{ job.status }}."

  # Deployment job
  deploy:
    runs-on: ubuntu-latest
    needs: build
    steps:
      - name: Deploy to GitHub Pages
        id: deployment
        # https://github.com/actions/deploy-pages
        uses: actions/deploy-pages@v4

      - run: echo "üçè This job's status is ${{ job.status }}."